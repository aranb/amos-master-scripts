#!/bin/bash

export script_base="${HOME}/git/amos-master-scripts"
export bdir=$pdir   # The base directory
export TABLE="usertable"
export CF="fam"
export THREADS=150
export label=$1
shift
export approx_time=360

export ycsb_cmd="${bdir}/inst/ycsb/bin/ycsb run omid"
export ycsb_load_cmd="${bdir}/inst/ycsb/bin/ycsb load omid"
export ycsb_common_params="-cp ${bdir}/inst/conf -P ${bdir}/inst/Sworkloada -p table=${TABLE} -p columnfamily=${CF} -p histogram.buckets=10"
export ycsb_run_params="-s"
export ycsb_load_params="-threads 100 -s " #-p autoFlush=false"

export ops_param=" -p operationcount="
export single_thread_speed=350
export max_capacity=13000
export splits=0

export load_batch_size=100
export timeout=200

#checkout what interface to use on tso
export iface=$(ssh tso ifconfig | grep -B1 `grep tso /etc/hosts | cut -f 1` | head -n1 | cut -d' ' -f 1) 
export tso_cmd="${bdir}/inst/tso-server/bin/omid.sh tso -metricsConfigs console:_:10:SECONDS -networkIface ${iface} -batchPersistTimeout ${timeout}"
export tso_batchsize="-maxBatchSize "

threads=$@ #(1 2 5 10 20 50 100 120 150)
#threads=(1 2)

for thread in ${threads[@]}; do
        rate=$(echo "rate=${thread}*${single_thread_speed}; if (rate>${max_capacity}) ${max_capacity} else rate" | bc -l)
        ops=$(echo "${rate}*${approx_time}" | bc -l)

        echo ""
        echo "Approx Rate = "${rate}" ops/sec, Threads="${thread}
        echo ""

        #kill TSO and clients (in case there are any left over
        ${script_base}/kill_clients
        ${script_base}/kill_tso
	
	#clean hbase and start anew
	${script_base}/clean_hbase.sh
	${script_base}/fresh_start.sh ${splits}

	#start the tso
        echo ${tso_cmd} ${tso_batchsize} ${load_batch_size}
        ssh -T tso << EOF &> ${pdir}/out/tsoload-${label}-threads${thread}.txt &
                ${tso_cmd} ${tso_batchsize} ${load_batch_size}
EOF
        sleep 5

	#load the database
	echo ${ycsb_load_cmd} ${ycsb_common_params} ${ycsb_load_params}
	ssh -T ycsb << EOF
		${ycsb_load_cmd} ${ycsb_common_params} ${ycsb_load_params}
EOF

        #kill the TSO and start a new one with the correct batch size (== no/ of threads)
        ${script_base}/kill_tso
        echo ${tso_cmd} ${tso_batchsize} 1000
        ssh -T tso << EOF &> ${pdir}/out/tso-${label}-threads${thread}.txt &
                ${tso_cmd} ${tso_batchsize} 1000
EOF
        sleep 5

        #flush everything to make sure there are files on the disk
        echo 'Flushing everything'
        hbase shell << EOF
                flush 'OMID_COMMIT_TABLE'
                flush 'OMID_TIMESTAMP'
                flush 'usertable'
EOF
	
	hbase org.jruby.Main ~/git/amos-master-scripts/RegionsStats.rb
	#start the test
	echo ${ycsb_cmd} ${ycsb_common_params} ${ycsb_run_params} ${ops_param}${ops} -threads ${thread} 
	ssh -T ycsb << EOF &> ${pdir}/out/${label}-threads${thread}.txt &
		${ycsb_cmd} ${ycsb_common_params} ${ycsb_run_params} ${ops_param}${ops} -threads ${thread}
EOF
	wait $!
	hbase org.jruby.Main ~/git/amos-master-scripts/RegionsStats.rb

	#stop the tso
	sleep 12
	echo "Killing TSO"
	${script_base}/kill_tso

done;
mail_cmd="echo `basename $0` \"finished with parameters = ${threads}\" | mail -s \"Test ${label}\" aran.bergman@gmail.com"
ssh users.emulab.net $mail_cmd
